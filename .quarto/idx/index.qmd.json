{"title":"dashboard_alpha","markdown":{"yaml":{"title":"dashboard_alpha","format":"dashboard","logo":"images/skype_icon.png","editor_options":{"chunk_output_type":"console"}},"headingText":"theme_set(theme_minimal(base_size = 24, base_family = \"Atkinson Hyperlegible\"))","containsRefs":false,"markdown":"\n\n```{r}\n#| label: load-packages\n#| message: false\n\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(scales)\nlibrary(DT)\nlibrary(gt)\nlibrary(glue)\nlibrary(plotly)\n```\n\n```{r}\n#| label: load-data\n#| message: false\n\n# seniority_in <- read_excel(\"data/2024-04 SeniorityList_UnionCopy.xlsx\",\n#                         sheet = \"UNION_EXCEL_FILE\",\n#                         range = cell_cols(\"A:P\")\n#                         )\n\n\n### Import and merge seniority lists ###\n\nimported_seniority <- dir(path = \"data/\", \n                            full.names = T,\n                            pattern = \"\\\\d\\\\d\\\\d[34]-\\\\d\\\\d\\\\sSeniorityList_UnionCopy.xlsx\"\n)\n\n\n### Create Function to build list of files ###\n\nread_snrty_files <- function(file){\n  if(is.na(file)) stop(\"no file path\")\n  imported_snrty <- read_excel(file,\n                               sheet = \"UNION_EXCEL_FILE\",\n                               range = cell_cols(\"A:P\")\n  )\n  imported_snrty\n}\n\n### Bind files by folder ###\n\nmerged_seniority <- map_dfr(.x = imported_seniority, .f = read_snrty_files)\n\n\n```\n\n```{r}\n#| label: prep-data\n\nseniority <- merged_seniority %>% \n  rename_all(tolower) %>% \n  select(cmi, co_snrty = `company seniority`, snrty = `union seniority`, 4:7,\n         equip_lock = `equip lock`, 9:12, tsp_elect = `tsp election`,\n         year_month = `year month`, published) %>% \n  mutate(doh = ymd(doh), equip_lock = ymd(equip_lock), published = ymd(published),\n         yos_r = ceiling( as.duration(doh %--% published) / dyears(1) )\n         )\n\nmax_pub_floor <- floor_date(max(seniority$published), unit = \"months\")\npub_12m_lb <- add_with_rollback(max_pub_floor,\n                  months(-12),\n                  roll_to_first = F)\n\nmax_doh_floor <- floor_date(max(seniority$doh), unit = \"months\")\ndoh_12m_lb <- add_with_rollback(max_doh_floor,\n                                months(-12),\n                                roll_to_first = T)\n```\n\n```{r}\n#| label: set-inputs\n\ntime_period_in <- paste(month(max_pub_floor, label = T),\n                        year(max_pub_floor)\n                        )\ntime_period <- time_period_in[1]\n```\n\n#  {.sidebar}\n\n\\\nThis dashboard displays statistics for:\n\n|              |                     |\n|--------------|---------------------|\n| **Hospital** | Grey Sloan Memorial |\n| **Unit**     | Labor and Delivery  |\n| **Month**    | `{r} time_period`   |\n\n------------------------------------------------------------------------\n\nIn `{r} time_period` the staff breakdown in the unit was as follows:\n\n|                          |     |\n|--------------------------|-----|\n| **Attending physicians** |  14 |\n| **Residents**            |  21 |\n| **Nurses**               |  12 |\n\n------------------------------------------------------------------------\n\n::: {.callout-note collapse=\"true\"}\n## Disclaimer\n\nThis is a fictional hospital. The data are simulated based on realistic birth characteristics and risk factors from [this report by the CDC](https://www.cdc.gov/nchs/data/nvsr/nvsr72/nvsr72-01.pdf).\n:::\n\n# All\n\n```{r}\n#| label: all-values\n#| results: hide\n\nn_pilots <- seniority %>% \n  filter(published > max_pub_floor) %>% \n  nrow()\n\np_pic <- seniority %>% \n  filter(published > max_pub_floor) %>% \n  count(seat) %>% \n  mutate(p = n / sum(n)) %>% \n  filter(seat == \"PIC\") %>% \n  pull(p)\n\np_sic <- seniority %>% \n  filter(published > max_pub_floor) %>% \n  count(seat) %>% \n  mutate(p = n / sum(n)) %>% \n  filter(seat == \"SIC\") %>% \n  pull(p)\n\n# n_births <- nrow(ld)\n# \n# p_cesarean <- ld |>\n#   count(delivery_method) |>\n#   mutate(p = n / sum(n)) |>\n#   filter(delivery_method == \"Cesarean\") |>\n#   pull(p)\n# \n# p_cesarean_color <- case_when(\n#   between(p_cesarean, params$us_cesarean_rate, params$us_cesarean_rate + params$threshold_diff) ~ \"warning\",\n#   p_cesarean > params$us_cesarean_rate + params$threshold_diff ~ \"danger\",\n#   .default = \"light\"\n#   )\n# \n# p_preterm <- ld |>\n#   count(term) |>\n#   mutate(p = n / sum(n)) |>\n#   filter(term == \"Pre-term\") |>\n#   pull(p)\n# \n# p_preterm_color <- case_when(\n#   between(p_preterm, params$us_preterm_rate, params$us_preterm_rate + params$threshold_diff) ~ \"warning\",\n#   p_preterm > params$us_preterm_rate + params$threshold_diff ~ \"danger\",\n#   .default = \"light\"\n#   )\n```\n\n## Row {height=\"20%\"}\n\n```{r}\n#| content: valuebox\n#| title: \"Total Pilots\"\n\nlist(\n  icon = \"globe\",\n  color = \"primary\",\n  value = n_pilots\n)\n```\n\n```{r}\n#| content: valuebox\n#| title: \"Percent PIC\"\n\nlist(\n  icon = \"person-lines-fill\",\n  color = \"secondary\",\n  value = label_percent(accuracy = 0.1)(p_pic)\n)\n```\n\n```{r}\n#| content: valuebox\n#| title: \"Percent SIC\"\n\nlist(\n  icon = \"person-lines-fill\",\n  color = \"primary\",\n  value = label_percent(accuracy = 0.1)(p_sic)\n)\n```\n\n## Row {height=\"40%}\n\n```{r}\n#| title: \"Total Pilots\"\n\ntotal_pilots <- seniority %>% \n  select(cmi, doh, year_month, published) %>% \n  filter(published > pub_12m_lb) %>% \n  select(cmi, year_month) %>% \n  count(year_month) %>% \n  ggplot(aes(x = year_month,\n             y = n,\n             text = glue(\"Year Month: {year_month}\\nTotal Pilots: {n}\")\n             )\n         ) +\n  geom_line(aes(group = \"year_month\"))+\n  geom_point(size = 3, color = \"#3b8ede\", alpha = 0.7)+\n  # geom_point(size = 6, shape = \"circle open\")+\n  theme_bw()+\n  labs(x = NULL,\n       y = \"Count\")\n\nggplotly(total_pilots, tooltip = \"text\")\n```\n\n## Row {height=\"40%}\n\n```{r}\n#| title: \"New Hires\"\n\nhired_pilots <- seniority %>% \n  select(cmi, doh, year_month, published) %>% \n  mutate(moh = str_pad(month(doh),2,pad = \"0\"),\n         ymh = glue(\"{year(doh)}-{moh}\"),\n         ymh = as.character(ymh)) %>% \n  filter(doh > doh_12m_lb & published > max_pub_floor) %>% \n  select(cmi, ymh) %>% \n  count(ymh) %>% \n  ggplot(aes(x = ymh,\n             y = n,\n             text = glue(\"Year Month: {ymh}\\nPilots Hired: {n}\")\n             )\n         ) +\n  geom_line(aes(group = \"ymh\"))+\n  geom_point(size = 3,\n             color = \"#3b8ede\",\n             alpha = 0.7)+\n  # geom_point(size = 6, shape = \"circle open\")+\n  theme_bw()+\n  labs(x = NULL,\n       y = \"Count\")\n\nggplotly(hired_pilots, tooltip = \"text\")\n```\n\n# Fleet Stats\n\n```{r}\n#| label: fleet-values\n#| results: hide\n\n### ESPN Theme ###\n\ngt_theme_espn <- function(data, ...){\n  data %>% \n    opt_all_caps()  %>%\n    opt_table_font(\n      font = list(\n        google_font(\"Lato\"),\n        default_fonts()\n      )\n    )  %>% \n    opt_row_striping() %>% \n    tab_options(\n      row.striping.background_color = \"#BFCDDF\",\n      table_body.hlines.color = \"#f6f7f7\",\n      source_notes.font.size = 12,\n      table.font.size = 16,\n      #table.width = px(700),\n      heading.align = \"left\",\n      heading.title.font.size = 24,\n      table.border.top.color = \"transparent\",\n      table.border.top.width = px(3),\n      data_row.padding = px(7),\n      ...\n    ) \n}\n\n### Fleet Ratios ###\n\ntfleet_ratio <- seniority %>%\n  filter(published > max_pub_floor) %>% \n  select(aircraft, seat) %>% \n  filter(! aircraft %in% c(\"G-V\", \"BE-400A\", \"CE-560\", \"HS-125-800XPC\")) %>% \n  group_by(aircraft, seat) %>% \n  drop_na() %>% \n  count() %>% \n  pivot_wider(names_from = seat, values_from = n) %>% \n  mutate(total = PIC + SIC, pct_PIC = PIC/total, pct_SIC = 1-pct_PIC) %>% \n  arrange(desc(PIC)) %>% \n  ungroup()\n\n# view(tfleet_ratio)\n\n\n### Create Table ###\n\ntfleet_ratio %>% \n  gt(rowname_col = \"aircraft\") %>% \n  tab_header(title = md(\"*NJASAP PIC / SIC Ratio by Fleet*\"),\n          #   subtitle = md()\n             )%>% \n  gt_theme_espn() %>% \n  cols_label(\n    pct_PIC = \"% PIC\",\n    pct_SIC = \"% SIC\",\n  ) %>% \n  tab_spanner(\"Count\", columns = c(1:4)) %>% \n  tab_style(\n    style = list(\n      cell_text(style = \"italic\"),\n      cell_text(weight = \"bold\")\n    ),\n    locations = cells_body(\n      columns = total\n    )\n  ) %>%\n  sub_missing(\n    columns = everything(),\n    rows = everything(),\n    missing_text = \"--\"\n  ) %>% \n  cols_width(everything() ~px(75)) %>% \n  tab_footnote(footnote = md(glue(\"*Data current as of {year(max_pub_floor)}-{month(max_pub_floor)} NJASAP Pilot Seniority List*\")\n                             ),\n               locations = cells_title(groups = \"title\"),\n               placement = \"right\")\n```\n\n```{r}\n#| title: \"Fleet Ratio\"\n\ntfleet_ratio %>% \n  datatable(\n    colnames = c(\"Fleet\" = 2, \"Total\" = 5, \"% PIC\" = 6, \"% SIC\" = 7),\n    options = list(autoWidth = T)\n  ) %>% \n  formatPercentage(5:6,1)\n```\n\n# Duty Summary\n\n```{r}\n#| title: \"Duty Summary\"\n#| results: hide\n\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(ggplot2)\nlibrary(readxl)\nlibrary(\"scales\")\nlibrary(lubridate)\nlibrary(glue)\nlibrary(cellranger)\nlibrary(gt)\n\n### Import and merge seniority lists ###\n\nimported_folder_2023 <- dir(path = \"~/OneDrive - NJASAP/Documents/Seniority Related/Seniority List - Union/2023\", \n                            full.names = T,\n                            pattern = \"\\\\d\\\\d\\\\d[34]-\\\\d\\\\d\\\\sSeniorityList_UnionCopy.xlsx\"\n                            )\n\nimported_folder_2024 <- dir(path = \"~/OneDrive - NJASAP/Documents/Seniority Related/Seniority List - Union/2024\", \n                            full.names = T,\n                            pattern = \"\\\\d\\\\d\\\\d[34]-\\\\d\\\\d\\\\sSeniorityList_UnionCopy.xlsx\"\n                            )\nimp_folder_dsr <- dir(\"~/OneDrive - NJASAP/Documents/Duty Status Reports DSR/Power Query Method TEST/DSR Montly RAW\",\n                             full.names = T,\n                             pattern = \"\\\\d\\\\d\\\\d[34]-\\\\d+\\\\sPilot Duty Summary.*\\\\.xlsx\")\n\n### Create Function to build list of files ###\n\nread_snrty_files <- function(file){\n  if(is.na(file)) stop(\"no file path\")\n  imported_snrty <- read_excel(file,\n                               sheet = \"UNION_EXCEL_FILE\",\n                               range = cell_cols(\"A:P\")\n                               )\n  imported_snrty\n}\n\nread_dsr_files <- function(file){\n  if(is.na(file)) stop(\"no file path\")\n  imported_dsr <- read_excel(file,\n                               sheet = \"Pilot Duty Report\",\n                               range = cell_cols(1:13)\n  )\n  imported_dsr\n}\n\n### Bind files by folder ###\n\nmerged_seniority_list_2023 <- map_dfr(.x = imported_folder_2023, .f = read_snrty_files)\nmerged_seniority_list_2024 <- map_dfr(.x = imported_folder_2024, .f = read_snrty_files)\n\nmerged_dsr <- map_dfr(.x = imp_folder_dsr, .f = read_dsr_files)\n\nmerged_snrty <- bind_rows(merged_seniority_list_2023, merged_seniority_list_2024)\n\n### Seniority Clean-up ###\n\nclean_merged_snrty <- merged_snrty %>% \n  rename_all(tolower) %>% \n  select(cmi, co_snrty = `company seniority`, snrty = `union seniority`, 4:7,\n         equip_lock = `equip lock`, 9:12, tsp_elect = `tsp election`,\n         year_month = `year month`, published) %>% \n  mutate(doh = ymd(doh), equip_lock = ymd(equip_lock), published = ymd(published),\n         yos_r = ceiling( as.duration(doh %--% published) / dyears(1) )\n         )\n\n### DSR Clean-up ###\n\nclean_merged_dsr <- merged_dsr %>% \n  rename_all(tolower) %>% \n  select(1:2, sen_status = `sen status`, 4:6, schedule = `sched type`, duty_code = `duty code`,\n         rest, duty_time = `duty time`, end_loc = `end loc`, icao_reg = `icao region`, country) %>% \n  mutate(date = ymd(date),\n         rest = ifelse(rest == \"24+\", \"25\", rest),\n         rest = as.numeric(rest),\n         duty_code = ifelse(duty_code == \"*\", \"EXT\", duty_code),\n         duty_prime = ifelse(duty_code == \"EXT\",\n                             duty_code,\n                             str_sub(duty_code,1,1)),\n         year = year(date),\n         month = str_pad(month(date),2,pad = \"0\"),\n         year_month = glue(\"{year}-{month}\")\n  )\n\n\n### Required Dates ###\n\ndsr_12m_lbk <- add_with_rollback(floor_date(max(clean_merged_dsr$date), months(1)),\n                                 months(-11),\n                                 roll_to_first = TRUE)\ndsr_min_month <- str_pad(month(dsr_12m_lbk),2, pad = \"0\")\ndsr_min_year <- year(dsr_12m_lbk)\ndsr_max_month <- str_pad(month(max(clean_merged_dsr$date)),2,pad = \"0\")\ndsr_max_year <- year(max(clean_merged_dsr$date))\n\n### Table Prep -- Seniority List ###\n\n### Filtered for latest seniority list ###\n\nlatest_snrty_list <- clean_merged_snrty %>% \n  filter( published > max_pub_floor)\n\n\n# glimpse(clean_merged_dsr)\n\n### Pivot Wider DSR ###\n\n# latest_dsr_list <- clean_merged_dsr %>% \n#   select(cmi, date, duty_prime, duty_code) %>% \n#   filter(date >= m12_month_lb) %>% \n#   group_by(cmi, duty_prime, duty_code) %>%\n#   count() %>% \n#   pivot_wider(names_from = duty_prime, values_from = n) %>% \n#   mutate(ttl_ext_days = EXT + R) %>% \n#   select(cmi, EXT, R, ttl_ext_days, X) \n\npivot_duty_prime <- clean_merged_dsr %>% \n  select(cmi, date, duty_prime) %>% \n  filter(date >= dsr_12m_lbk) %>% \n  group_by(cmi, duty_prime) %>%\n  count() %>% \n  pivot_wider(names_from = duty_prime, values_from = n) %>% \n  mutate(ttl_ext_days = EXT + R) %>% \n  select(cmi, EXT, R, ttl_ext_days, X)\n\npivot_duty_code <- clean_merged_dsr %>% \n  select(cmi, date, duty_code) %>% \n  filter(date >= dsr_12m_lbk) %>% \n  group_by(cmi, duty_code) %>%\n  count() %>% \n  pivot_wider(names_from = duty_code, values_from = n) %>% \n  select(cmi, X2)\n  \n### Join Duty Code and Duty Prime ###\n\njoin_duty_code <- pivot_duty_code %>% \n  left_join(pivot_duty_prime, by = \"cmi\") %>% \n  select(cmi, EXT, R, ttl_ext_days, X, X2) # Codes to display\n\n### Join Latest DSR and Seniority ###\n\njoin_latest_dsr_snrty <- latest_snrty_list %>% \n  left_join(join_duty_code, by = \"cmi\")\n\n# view(join_latest_dsr_snrty)\n\n### Extended Day 79 Pockets Table ###\n\ntable_79p_join_dsr <- join_latest_dsr_snrty %>%\n  mutate(sdp = ifelse(is.na(sdp), \"\", glue(\"({sdp})\")),\n         name_sdp = glue(\"{name} {sdp}\"),\n         name_sdp = as.character(name_sdp)\n         ) %>% \n  select(name_sdp, snrty, aircraft, schedule, seat, EXT, R, ttl_ext_days, X2, X)\n\ntable_79p_join_dsr[6:10][is.na(table_79p_join_dsr[6:10])] <- 0\n   \n# view(table_79p_join_dsr)\n\n### GT 79 Pockets Table ###\n\n# table_79p_join_dsr %>%\n#   mutate(name = as.character(glue(\"{name} {sdp}\"))) %>%\n#  # name = map(name, ~gt::html(as.character(.x))) %>% \n#   select(name, snrty, aircraft, schedule, seat, EXT, R, ttl_ext_days, X2, X) %>%\n#   arrange(name) %>% \n#   gt(rowname_col = \"name\")%>% \n#   tab_header(title = md(\"NJASAP *Pilot Duty Summary*\"),\n#              subtitle = md(glue(\n#                \"Period from *{year(m12_month_lb)}-{str_pad(month(m12_month_lb),2,pad = '0')}*\n#                to *{year(latest_published_date)}-{str_pad(month(latest_published_date),2,pad = '0')}*\")\n#              )\n#              ) %>% \n#   gt_theme_espn() %>% \n#   cols_label(\n#     name = \"Name (sdp)\",\n#     snrty = \"Seniority\",\n#     ttl_ext_days = \"Total Ext Days\",\n#     X2 = \"Planned Intl Event\"\n#   ) %>% \n#   sub_missing(\n#     columns = everything(),\n#     rows = everything(),\n#     missing_text = \"--\"\n#   ) %>% \n#   cols_width(\n#     snrty ~px(100),\n#     name ~px(225),\n#     aircraft ~px(100),\n#     schedule ~px(100),\n#     seat ~px(40),\n#     EXT ~px(40),\n#     R ~px(40),\n#     X ~px(40),\n#     ttl_ext_days ~px(130),\n#     everything() ~px(150)) %>% \n#   tab_footnote(footnote = md(glue(\"*Sniority, aircraft, schedule, \n#                                   and seat based on\n#                                   {year(latest_published_date)}-0{month(latest_published_date)}\n#                                    seniority list*\")),\n#                locations = cells_title(groups = \"subtitle\"),\n#                placement = \"right\")\n```\n\n\n```{r}\n#| title: \"Duty Day Summary\"\n\ntable_79p_join_dsr %>% \n  datatable(\n    colnames = c(\"Name\", \"Senioirty\", \"Fleet\", \"Schedult\", \"Seat\", \"Ext\", \"R\", \"Total (Ext +R)\", \"Pland Intl\", \"X\"),\n    filter = \"top\",\n    options = list(\n     # paging = TRUE,\n     # pageLength = 25,\n      autoWidth = TRUE,\n      scrollY=\"100vh\",\n      scrollCollapse = FALSE\n    ),\n    caption = htmltools::tags$caption(\n      style = 'caption-side: top; text-align: left;',\n      'Period from ', htmltools::em(glue(\"{dsr_min_year}-{dsr_min_month}\")),' to ',htmltools::em(glue(\"{dsr_max_year}-{dsr_max_month}\"))\n      )\n  )\n```\n\n# Misc Holding\n\n```{r}\n#| title: \"Extended Day Summary\"\n\n\n### Year Month Summary 12-Month ###\n\ndsr_12_month_back <- max(clean_merged_dsr$date) %m+% months(-12)\ndsr_max_month <- month(max(clean_merged_dsr$date))\ndsr_max_year <- year(max(clean_merged_dsr$date))\n\nclean_merged_dsr %>% \n  filter(date > dsr_12_month_back) %>% \n  group_by(year_month, duty_code) %>%\n  count() %>% \n  pivot_wider(names_from = duty_code, values_from = n) %>% \n  mutate(total_extended = R + EXT) %>% \n  select(year_month, R, EXT, total_extended) %>% \n  ungroup() %>% \n  gt(rowname_col = \"year_month\") %>% \n  tab_header(title = md(\"NJASAP *Extended Day Summary*\"),\n             subtitle = md(glue(\"Period from *{year(dsr_12_month_back)}-0{month(dsr_12_month_back)+1}*\n                             to *{dsr_max_year}-0{dsr_max_month}*\")\n             )\n  ) %>% \n  gt_theme_espn() %>% \n  cols_label(\n    R = \"VAWD\",\n    total_extended = \"Total Extened\"\n  ) %>% \n  tab_options(\n    stub.font.size = \"16\"\n  ) %>% \n  fmt_number(everything(),\n             sep_mark = \",\",\n             decimals = 0)\n\n\n```","srcMarkdownNoYaml":"\n\n```{r}\n#| label: load-packages\n#| message: false\n\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(scales)\nlibrary(DT)\nlibrary(gt)\nlibrary(glue)\nlibrary(plotly)\n# theme_set(theme_minimal(base_size = 24, base_family = \"Atkinson Hyperlegible\"))\n```\n\n```{r}\n#| label: load-data\n#| message: false\n\n# seniority_in <- read_excel(\"data/2024-04 SeniorityList_UnionCopy.xlsx\",\n#                         sheet = \"UNION_EXCEL_FILE\",\n#                         range = cell_cols(\"A:P\")\n#                         )\n\n\n### Import and merge seniority lists ###\n\nimported_seniority <- dir(path = \"data/\", \n                            full.names = T,\n                            pattern = \"\\\\d\\\\d\\\\d[34]-\\\\d\\\\d\\\\sSeniorityList_UnionCopy.xlsx\"\n)\n\n\n### Create Function to build list of files ###\n\nread_snrty_files <- function(file){\n  if(is.na(file)) stop(\"no file path\")\n  imported_snrty <- read_excel(file,\n                               sheet = \"UNION_EXCEL_FILE\",\n                               range = cell_cols(\"A:P\")\n  )\n  imported_snrty\n}\n\n### Bind files by folder ###\n\nmerged_seniority <- map_dfr(.x = imported_seniority, .f = read_snrty_files)\n\n\n```\n\n```{r}\n#| label: prep-data\n\nseniority <- merged_seniority %>% \n  rename_all(tolower) %>% \n  select(cmi, co_snrty = `company seniority`, snrty = `union seniority`, 4:7,\n         equip_lock = `equip lock`, 9:12, tsp_elect = `tsp election`,\n         year_month = `year month`, published) %>% \n  mutate(doh = ymd(doh), equip_lock = ymd(equip_lock), published = ymd(published),\n         yos_r = ceiling( as.duration(doh %--% published) / dyears(1) )\n         )\n\nmax_pub_floor <- floor_date(max(seniority$published), unit = \"months\")\npub_12m_lb <- add_with_rollback(max_pub_floor,\n                  months(-12),\n                  roll_to_first = F)\n\nmax_doh_floor <- floor_date(max(seniority$doh), unit = \"months\")\ndoh_12m_lb <- add_with_rollback(max_doh_floor,\n                                months(-12),\n                                roll_to_first = T)\n```\n\n```{r}\n#| label: set-inputs\n\ntime_period_in <- paste(month(max_pub_floor, label = T),\n                        year(max_pub_floor)\n                        )\ntime_period <- time_period_in[1]\n```\n\n#  {.sidebar}\n\n\\\nThis dashboard displays statistics for:\n\n|              |                     |\n|--------------|---------------------|\n| **Hospital** | Grey Sloan Memorial |\n| **Unit**     | Labor and Delivery  |\n| **Month**    | `{r} time_period`   |\n\n------------------------------------------------------------------------\n\nIn `{r} time_period` the staff breakdown in the unit was as follows:\n\n|                          |     |\n|--------------------------|-----|\n| **Attending physicians** |  14 |\n| **Residents**            |  21 |\n| **Nurses**               |  12 |\n\n------------------------------------------------------------------------\n\n::: {.callout-note collapse=\"true\"}\n## Disclaimer\n\nThis is a fictional hospital. The data are simulated based on realistic birth characteristics and risk factors from [this report by the CDC](https://www.cdc.gov/nchs/data/nvsr/nvsr72/nvsr72-01.pdf).\n:::\n\n# All\n\n```{r}\n#| label: all-values\n#| results: hide\n\nn_pilots <- seniority %>% \n  filter(published > max_pub_floor) %>% \n  nrow()\n\np_pic <- seniority %>% \n  filter(published > max_pub_floor) %>% \n  count(seat) %>% \n  mutate(p = n / sum(n)) %>% \n  filter(seat == \"PIC\") %>% \n  pull(p)\n\np_sic <- seniority %>% \n  filter(published > max_pub_floor) %>% \n  count(seat) %>% \n  mutate(p = n / sum(n)) %>% \n  filter(seat == \"SIC\") %>% \n  pull(p)\n\n# n_births <- nrow(ld)\n# \n# p_cesarean <- ld |>\n#   count(delivery_method) |>\n#   mutate(p = n / sum(n)) |>\n#   filter(delivery_method == \"Cesarean\") |>\n#   pull(p)\n# \n# p_cesarean_color <- case_when(\n#   between(p_cesarean, params$us_cesarean_rate, params$us_cesarean_rate + params$threshold_diff) ~ \"warning\",\n#   p_cesarean > params$us_cesarean_rate + params$threshold_diff ~ \"danger\",\n#   .default = \"light\"\n#   )\n# \n# p_preterm <- ld |>\n#   count(term) |>\n#   mutate(p = n / sum(n)) |>\n#   filter(term == \"Pre-term\") |>\n#   pull(p)\n# \n# p_preterm_color <- case_when(\n#   between(p_preterm, params$us_preterm_rate, params$us_preterm_rate + params$threshold_diff) ~ \"warning\",\n#   p_preterm > params$us_preterm_rate + params$threshold_diff ~ \"danger\",\n#   .default = \"light\"\n#   )\n```\n\n## Row {height=\"20%\"}\n\n```{r}\n#| content: valuebox\n#| title: \"Total Pilots\"\n\nlist(\n  icon = \"globe\",\n  color = \"primary\",\n  value = n_pilots\n)\n```\n\n```{r}\n#| content: valuebox\n#| title: \"Percent PIC\"\n\nlist(\n  icon = \"person-lines-fill\",\n  color = \"secondary\",\n  value = label_percent(accuracy = 0.1)(p_pic)\n)\n```\n\n```{r}\n#| content: valuebox\n#| title: \"Percent SIC\"\n\nlist(\n  icon = \"person-lines-fill\",\n  color = \"primary\",\n  value = label_percent(accuracy = 0.1)(p_sic)\n)\n```\n\n## Row {height=\"40%}\n\n```{r}\n#| title: \"Total Pilots\"\n\ntotal_pilots <- seniority %>% \n  select(cmi, doh, year_month, published) %>% \n  filter(published > pub_12m_lb) %>% \n  select(cmi, year_month) %>% \n  count(year_month) %>% \n  ggplot(aes(x = year_month,\n             y = n,\n             text = glue(\"Year Month: {year_month}\\nTotal Pilots: {n}\")\n             )\n         ) +\n  geom_line(aes(group = \"year_month\"))+\n  geom_point(size = 3, color = \"#3b8ede\", alpha = 0.7)+\n  # geom_point(size = 6, shape = \"circle open\")+\n  theme_bw()+\n  labs(x = NULL,\n       y = \"Count\")\n\nggplotly(total_pilots, tooltip = \"text\")\n```\n\n## Row {height=\"40%}\n\n```{r}\n#| title: \"New Hires\"\n\nhired_pilots <- seniority %>% \n  select(cmi, doh, year_month, published) %>% \n  mutate(moh = str_pad(month(doh),2,pad = \"0\"),\n         ymh = glue(\"{year(doh)}-{moh}\"),\n         ymh = as.character(ymh)) %>% \n  filter(doh > doh_12m_lb & published > max_pub_floor) %>% \n  select(cmi, ymh) %>% \n  count(ymh) %>% \n  ggplot(aes(x = ymh,\n             y = n,\n             text = glue(\"Year Month: {ymh}\\nPilots Hired: {n}\")\n             )\n         ) +\n  geom_line(aes(group = \"ymh\"))+\n  geom_point(size = 3,\n             color = \"#3b8ede\",\n             alpha = 0.7)+\n  # geom_point(size = 6, shape = \"circle open\")+\n  theme_bw()+\n  labs(x = NULL,\n       y = \"Count\")\n\nggplotly(hired_pilots, tooltip = \"text\")\n```\n\n# Fleet Stats\n\n```{r}\n#| label: fleet-values\n#| results: hide\n\n### ESPN Theme ###\n\ngt_theme_espn <- function(data, ...){\n  data %>% \n    opt_all_caps()  %>%\n    opt_table_font(\n      font = list(\n        google_font(\"Lato\"),\n        default_fonts()\n      )\n    )  %>% \n    opt_row_striping() %>% \n    tab_options(\n      row.striping.background_color = \"#BFCDDF\",\n      table_body.hlines.color = \"#f6f7f7\",\n      source_notes.font.size = 12,\n      table.font.size = 16,\n      #table.width = px(700),\n      heading.align = \"left\",\n      heading.title.font.size = 24,\n      table.border.top.color = \"transparent\",\n      table.border.top.width = px(3),\n      data_row.padding = px(7),\n      ...\n    ) \n}\n\n### Fleet Ratios ###\n\ntfleet_ratio <- seniority %>%\n  filter(published > max_pub_floor) %>% \n  select(aircraft, seat) %>% \n  filter(! aircraft %in% c(\"G-V\", \"BE-400A\", \"CE-560\", \"HS-125-800XPC\")) %>% \n  group_by(aircraft, seat) %>% \n  drop_na() %>% \n  count() %>% \n  pivot_wider(names_from = seat, values_from = n) %>% \n  mutate(total = PIC + SIC, pct_PIC = PIC/total, pct_SIC = 1-pct_PIC) %>% \n  arrange(desc(PIC)) %>% \n  ungroup()\n\n# view(tfleet_ratio)\n\n\n### Create Table ###\n\ntfleet_ratio %>% \n  gt(rowname_col = \"aircraft\") %>% \n  tab_header(title = md(\"*NJASAP PIC / SIC Ratio by Fleet*\"),\n          #   subtitle = md()\n             )%>% \n  gt_theme_espn() %>% \n  cols_label(\n    pct_PIC = \"% PIC\",\n    pct_SIC = \"% SIC\",\n  ) %>% \n  tab_spanner(\"Count\", columns = c(1:4)) %>% \n  tab_style(\n    style = list(\n      cell_text(style = \"italic\"),\n      cell_text(weight = \"bold\")\n    ),\n    locations = cells_body(\n      columns = total\n    )\n  ) %>%\n  sub_missing(\n    columns = everything(),\n    rows = everything(),\n    missing_text = \"--\"\n  ) %>% \n  cols_width(everything() ~px(75)) %>% \n  tab_footnote(footnote = md(glue(\"*Data current as of {year(max_pub_floor)}-{month(max_pub_floor)} NJASAP Pilot Seniority List*\")\n                             ),\n               locations = cells_title(groups = \"title\"),\n               placement = \"right\")\n```\n\n```{r}\n#| title: \"Fleet Ratio\"\n\ntfleet_ratio %>% \n  datatable(\n    colnames = c(\"Fleet\" = 2, \"Total\" = 5, \"% PIC\" = 6, \"% SIC\" = 7),\n    options = list(autoWidth = T)\n  ) %>% \n  formatPercentage(5:6,1)\n```\n\n# Duty Summary\n\n```{r}\n#| title: \"Duty Summary\"\n#| results: hide\n\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(ggplot2)\nlibrary(readxl)\nlibrary(\"scales\")\nlibrary(lubridate)\nlibrary(glue)\nlibrary(cellranger)\nlibrary(gt)\n\n### Import and merge seniority lists ###\n\nimported_folder_2023 <- dir(path = \"~/OneDrive - NJASAP/Documents/Seniority Related/Seniority List - Union/2023\", \n                            full.names = T,\n                            pattern = \"\\\\d\\\\d\\\\d[34]-\\\\d\\\\d\\\\sSeniorityList_UnionCopy.xlsx\"\n                            )\n\nimported_folder_2024 <- dir(path = \"~/OneDrive - NJASAP/Documents/Seniority Related/Seniority List - Union/2024\", \n                            full.names = T,\n                            pattern = \"\\\\d\\\\d\\\\d[34]-\\\\d\\\\d\\\\sSeniorityList_UnionCopy.xlsx\"\n                            )\nimp_folder_dsr <- dir(\"~/OneDrive - NJASAP/Documents/Duty Status Reports DSR/Power Query Method TEST/DSR Montly RAW\",\n                             full.names = T,\n                             pattern = \"\\\\d\\\\d\\\\d[34]-\\\\d+\\\\sPilot Duty Summary.*\\\\.xlsx\")\n\n### Create Function to build list of files ###\n\nread_snrty_files <- function(file){\n  if(is.na(file)) stop(\"no file path\")\n  imported_snrty <- read_excel(file,\n                               sheet = \"UNION_EXCEL_FILE\",\n                               range = cell_cols(\"A:P\")\n                               )\n  imported_snrty\n}\n\nread_dsr_files <- function(file){\n  if(is.na(file)) stop(\"no file path\")\n  imported_dsr <- read_excel(file,\n                               sheet = \"Pilot Duty Report\",\n                               range = cell_cols(1:13)\n  )\n  imported_dsr\n}\n\n### Bind files by folder ###\n\nmerged_seniority_list_2023 <- map_dfr(.x = imported_folder_2023, .f = read_snrty_files)\nmerged_seniority_list_2024 <- map_dfr(.x = imported_folder_2024, .f = read_snrty_files)\n\nmerged_dsr <- map_dfr(.x = imp_folder_dsr, .f = read_dsr_files)\n\nmerged_snrty <- bind_rows(merged_seniority_list_2023, merged_seniority_list_2024)\n\n### Seniority Clean-up ###\n\nclean_merged_snrty <- merged_snrty %>% \n  rename_all(tolower) %>% \n  select(cmi, co_snrty = `company seniority`, snrty = `union seniority`, 4:7,\n         equip_lock = `equip lock`, 9:12, tsp_elect = `tsp election`,\n         year_month = `year month`, published) %>% \n  mutate(doh = ymd(doh), equip_lock = ymd(equip_lock), published = ymd(published),\n         yos_r = ceiling( as.duration(doh %--% published) / dyears(1) )\n         )\n\n### DSR Clean-up ###\n\nclean_merged_dsr <- merged_dsr %>% \n  rename_all(tolower) %>% \n  select(1:2, sen_status = `sen status`, 4:6, schedule = `sched type`, duty_code = `duty code`,\n         rest, duty_time = `duty time`, end_loc = `end loc`, icao_reg = `icao region`, country) %>% \n  mutate(date = ymd(date),\n         rest = ifelse(rest == \"24+\", \"25\", rest),\n         rest = as.numeric(rest),\n         duty_code = ifelse(duty_code == \"*\", \"EXT\", duty_code),\n         duty_prime = ifelse(duty_code == \"EXT\",\n                             duty_code,\n                             str_sub(duty_code,1,1)),\n         year = year(date),\n         month = str_pad(month(date),2,pad = \"0\"),\n         year_month = glue(\"{year}-{month}\")\n  )\n\n\n### Required Dates ###\n\ndsr_12m_lbk <- add_with_rollback(floor_date(max(clean_merged_dsr$date), months(1)),\n                                 months(-11),\n                                 roll_to_first = TRUE)\ndsr_min_month <- str_pad(month(dsr_12m_lbk),2, pad = \"0\")\ndsr_min_year <- year(dsr_12m_lbk)\ndsr_max_month <- str_pad(month(max(clean_merged_dsr$date)),2,pad = \"0\")\ndsr_max_year <- year(max(clean_merged_dsr$date))\n\n### Table Prep -- Seniority List ###\n\n### Filtered for latest seniority list ###\n\nlatest_snrty_list <- clean_merged_snrty %>% \n  filter( published > max_pub_floor)\n\n\n# glimpse(clean_merged_dsr)\n\n### Pivot Wider DSR ###\n\n# latest_dsr_list <- clean_merged_dsr %>% \n#   select(cmi, date, duty_prime, duty_code) %>% \n#   filter(date >= m12_month_lb) %>% \n#   group_by(cmi, duty_prime, duty_code) %>%\n#   count() %>% \n#   pivot_wider(names_from = duty_prime, values_from = n) %>% \n#   mutate(ttl_ext_days = EXT + R) %>% \n#   select(cmi, EXT, R, ttl_ext_days, X) \n\npivot_duty_prime <- clean_merged_dsr %>% \n  select(cmi, date, duty_prime) %>% \n  filter(date >= dsr_12m_lbk) %>% \n  group_by(cmi, duty_prime) %>%\n  count() %>% \n  pivot_wider(names_from = duty_prime, values_from = n) %>% \n  mutate(ttl_ext_days = EXT + R) %>% \n  select(cmi, EXT, R, ttl_ext_days, X)\n\npivot_duty_code <- clean_merged_dsr %>% \n  select(cmi, date, duty_code) %>% \n  filter(date >= dsr_12m_lbk) %>% \n  group_by(cmi, duty_code) %>%\n  count() %>% \n  pivot_wider(names_from = duty_code, values_from = n) %>% \n  select(cmi, X2)\n  \n### Join Duty Code and Duty Prime ###\n\njoin_duty_code <- pivot_duty_code %>% \n  left_join(pivot_duty_prime, by = \"cmi\") %>% \n  select(cmi, EXT, R, ttl_ext_days, X, X2) # Codes to display\n\n### Join Latest DSR and Seniority ###\n\njoin_latest_dsr_snrty <- latest_snrty_list %>% \n  left_join(join_duty_code, by = \"cmi\")\n\n# view(join_latest_dsr_snrty)\n\n### Extended Day 79 Pockets Table ###\n\ntable_79p_join_dsr <- join_latest_dsr_snrty %>%\n  mutate(sdp = ifelse(is.na(sdp), \"\", glue(\"({sdp})\")),\n         name_sdp = glue(\"{name} {sdp}\"),\n         name_sdp = as.character(name_sdp)\n         ) %>% \n  select(name_sdp, snrty, aircraft, schedule, seat, EXT, R, ttl_ext_days, X2, X)\n\ntable_79p_join_dsr[6:10][is.na(table_79p_join_dsr[6:10])] <- 0\n   \n# view(table_79p_join_dsr)\n\n### GT 79 Pockets Table ###\n\n# table_79p_join_dsr %>%\n#   mutate(name = as.character(glue(\"{name} {sdp}\"))) %>%\n#  # name = map(name, ~gt::html(as.character(.x))) %>% \n#   select(name, snrty, aircraft, schedule, seat, EXT, R, ttl_ext_days, X2, X) %>%\n#   arrange(name) %>% \n#   gt(rowname_col = \"name\")%>% \n#   tab_header(title = md(\"NJASAP *Pilot Duty Summary*\"),\n#              subtitle = md(glue(\n#                \"Period from *{year(m12_month_lb)}-{str_pad(month(m12_month_lb),2,pad = '0')}*\n#                to *{year(latest_published_date)}-{str_pad(month(latest_published_date),2,pad = '0')}*\")\n#              )\n#              ) %>% \n#   gt_theme_espn() %>% \n#   cols_label(\n#     name = \"Name (sdp)\",\n#     snrty = \"Seniority\",\n#     ttl_ext_days = \"Total Ext Days\",\n#     X2 = \"Planned Intl Event\"\n#   ) %>% \n#   sub_missing(\n#     columns = everything(),\n#     rows = everything(),\n#     missing_text = \"--\"\n#   ) %>% \n#   cols_width(\n#     snrty ~px(100),\n#     name ~px(225),\n#     aircraft ~px(100),\n#     schedule ~px(100),\n#     seat ~px(40),\n#     EXT ~px(40),\n#     R ~px(40),\n#     X ~px(40),\n#     ttl_ext_days ~px(130),\n#     everything() ~px(150)) %>% \n#   tab_footnote(footnote = md(glue(\"*Sniority, aircraft, schedule, \n#                                   and seat based on\n#                                   {year(latest_published_date)}-0{month(latest_published_date)}\n#                                    seniority list*\")),\n#                locations = cells_title(groups = \"subtitle\"),\n#                placement = \"right\")\n```\n\n\n```{r}\n#| title: \"Duty Day Summary\"\n\ntable_79p_join_dsr %>% \n  datatable(\n    colnames = c(\"Name\", \"Senioirty\", \"Fleet\", \"Schedult\", \"Seat\", \"Ext\", \"R\", \"Total (Ext +R)\", \"Pland Intl\", \"X\"),\n    filter = \"top\",\n    options = list(\n     # paging = TRUE,\n     # pageLength = 25,\n      autoWidth = TRUE,\n      scrollY=\"100vh\",\n      scrollCollapse = FALSE\n    ),\n    caption = htmltools::tags$caption(\n      style = 'caption-side: top; text-align: left;',\n      'Period from ', htmltools::em(glue(\"{dsr_min_year}-{dsr_min_month}\")),' to ',htmltools::em(glue(\"{dsr_max_year}-{dsr_max_month}\"))\n      )\n  )\n```\n\n# Misc Holding\n\n```{r}\n#| title: \"Extended Day Summary\"\n\n\n### Year Month Summary 12-Month ###\n\ndsr_12_month_back <- max(clean_merged_dsr$date) %m+% months(-12)\ndsr_max_month <- month(max(clean_merged_dsr$date))\ndsr_max_year <- year(max(clean_merged_dsr$date))\n\nclean_merged_dsr %>% \n  filter(date > dsr_12_month_back) %>% \n  group_by(year_month, duty_code) %>%\n  count() %>% \n  pivot_wider(names_from = duty_code, values_from = n) %>% \n  mutate(total_extended = R + EXT) %>% \n  select(year_month, R, EXT, total_extended) %>% \n  ungroup() %>% \n  gt(rowname_col = \"year_month\") %>% \n  tab_header(title = md(\"NJASAP *Extended Day Summary*\"),\n             subtitle = md(glue(\"Period from *{year(dsr_12_month_back)}-0{month(dsr_12_month_back)+1}*\n                             to *{dsr_max_year}-0{dsr_max_month}*\")\n             )\n  ) %>% \n  gt_theme_espn() %>% \n  cols_label(\n    R = \"VAWD\",\n    total_extended = \"Total Extened\"\n  ) %>% \n  tab_options(\n    stub.font.size = \"16\"\n  ) %>% \n  fmt_number(everything(),\n             sep_mark = \",\",\n             decimals = 0)\n\n\n```"},"formats":{"dashboard":{"identifier":{"display-name":"HTML","target-format":"dashboard","base-format":"dashboard"},"execute":{"fig-width":8,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":false,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":"all","plotly-connected":false,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.553","page-layout":"custom","title":"dashboard_alpha","logo":"images/skype_icon.png","editor_options":{"chunk_output_type":"console"}},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["dashboard","html"]}